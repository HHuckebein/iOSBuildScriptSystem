<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Test Jenkins setup and configurations</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>6</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PROJECT_NAME</name>
          <description>Project name</description>
          <defaultValue>iOSBuildScriptSystemExample</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.25"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git@github.com:StephanPartzsch/iOSBuildScriptSystem.git</url>
        <credentialsId>b8a2175a-88d0-4530-b087-8af90459da8e</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/2 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash


BUILD_DIRECTORY=~/Desktop/Jenkins_Build
ARTEFACTS_DIRECTORY=~/Desktop/Jenkins_Artefacts/${BUILD_TAG}


# Provide keychain access

#security unlock-keychain -p a_key #&lt;MAC_USER_PASSWORD&gt; 
#$HOME/Library/Keychains/login.keychain


# Print current Xcode verion
echo &quot;Xcode version: &quot; `xcodebuild -version`
echo &quot;Xcode path: &quot; `xcode-select -print-path`


# Clean build directory
rm -rv $BUILD_DIRECTORY
mkdir -p $BUILD_DIRECTORY


# Run unit test
xctool 	-project ${PROJECT_NAME}.xcodeproj \
		-scheme iOSBuildScriptSystemExample \
        -configuration Debug \
        -sdk iphonesimulator \
        -reporter junit:${WORKSPACE}/test-reports/test-report.xml \
        test \
        -freshSimulator \
        -freshInstall
            
         
# Build the app
xctool 	-project $PROJECT_NAME.xcodeproj \
		-scheme iOSBuildScriptSystemExample \
        -sdk iphoneos \
        -configuration Release \
        GCC_PREPROCESSOR_DEFINITIONS=&quot;OUTLINE=1&quot; \
        CONFIGURATION_BUILD_DIR=$BUILD_DIRECTORY \
        clean \
        build
           

# Create IPA
xcrun 	-sdk iphoneos \
		PackageApplication \
        -v $BUILD_DIRECTORY/iOSBuildScriptSystemExample.app \
        -o $BUILD_DIRECTORY/iOSBuildScriptSystemExample.ipa \
#        --sign &quot;iPhone Distribution&quot; \
#        --embed ~/Desktop/Example_Ad_Hoc.mobileprovision


# Zip dsym for distribution
zip -r $BUILD_DIRECTORY/$PROJECT_NAME.dSYM.zip $BUILD_DIRECTORY/*.app.dSYM


# Save artefacts
mkdir -p $ARTEFACTS_DIRECTORY
mv $BUILD_DIRECTORY/$PROJECT_NAME.dSYM.zip $ARTEFACTS_DIRECTORY/
mv $BUILD_DIRECTORY/iOSBuildScriptSystemExample.ipa $ARTEFACTS_DIRECTORY/</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash


# Count lines of code and write file to process later
cloc $PROJECT_NAME --by-file --skip-uniqueness --xml --out=${WORKSPACE}/test-reports/line-count.xml</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Find duplicated code
java -Xmx512m -classpath /usr/local/Cellar/pmd/4.2.5/lib/pmd-4.2.5.jar:/usr/local/Cellar/pmd/ObjCLanguage-0.0.7-SNAPSHOT.jar net.sourceforge.pmd.cpd.CPD \
--minimum-tokens 50 \
--files iOSBuildScriptSystemExample \
--language ObjectiveC \
--encoding UTF-8 \
--format net.sourceforge.pmd.cpd.XMLRenderer &gt; ${WORKSPACE}/test-reports/duplicated-code.xml</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash


BUILD_DIRECTORY=~/Desktop/Jenkins_Build
COVERAGE_DIRECTORY=$BUILD_DIRECTORY/Build/Intermediates/iOSBuildScriptSystemExample.build/Debug-iphonesimulator/iOSBuildScriptSystemExample.build/Objects-normal/i386


# Generate code coverage data
echo &apos;Generate code coverage data&apos;

xctool 	-project ${PROJECT_NAME}.xcodeproj \
		-scheme iOSBuildScriptSystemExample \
        -sdk iphonesimulator \
        -configuration Debug \
        -derivedDataPath $BUILD_DIRECTORY\
        test \
       	GCC_GENERATE_DEBUGGING_SYMBOLS=YES \
  		GCC_GENERATE_TEST_COVERAGE_FILES=YES \
  		GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES
  
  
# Generate code coverage report   
cd $COVERAGE_DIRECTORY
gcovr --object-directory . --exclude &apos;.*Tests.*&apos; --xml &gt; $WORKSPACE/test-reports/code-coverage.xml

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Create git changelog
# ruby ./changelog.rb</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.dry.DryPublisher plugin="dry@2.41">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[DRY] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <usePreviousBuildAsReference>false</usePreviousBuildAsReference>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.71">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>false</doNotResolveRelativePaths>
      <pattern>**/test-reports/duplicated-code.xml</pattern>
      <highThreshold>50</highThreshold>
      <normalThreshold>25</normalThreshold>
    </hudson.plugins.dry.DryPublisher>
    <hudson.plugins.warnings.WarningsPublisher plugin="warnings@4.47">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[WARNINGS] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <usePreviousBuildAsReference>false</usePreviousBuildAsReference>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.71">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>true</doNotResolveRelativePaths>
      <parserConfigurations/>
      <consoleParsers>
        <hudson.plugins.warnings.ConsoleParser>
          <parserName>Clang (LLVM based)</parserName>
        </hudson.plugins.warnings.ConsoleParser>
      </consoleParsers>
    </hudson.plugins.warnings.WarningsPublisher>
    <hudson.plugins.cobertura.CoberturaPublisher plugin="cobertura@1.9.7">
      <coberturaReportFile>**/test-reports/code-coverage.xml</coberturaReportFile>
      <onlyStable>false</onlyStable>
      <failUnhealthy>false</failUnhealthy>
      <failUnstable>false</failUnstable>
      <autoUpdateHealth>false</autoUpdateHealth>
      <autoUpdateStability>false</autoUpdateStability>
      <zoomCoverageChart>false</zoomCoverageChart>
      <maxNumberOfBuilds>0</maxNumberOfBuilds>
      <failNoReports>true</failNoReports>
      <healthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>8000000</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>7000000</int>
          </entry>
        </targets>
      </healthyTarget>
      <unhealthyTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </unhealthyTarget>
      <failingTarget>
        <targets class="enum-map" enum-type="hudson.plugins.cobertura.targets.CoverageMetric">
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>LINE</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
          <entry>
            <hudson.plugins.cobertura.targets.CoverageMetric>CONDITIONAL</hudson.plugins.cobertura.targets.CoverageMetric>
            <int>0</int>
          </entry>
        </targets>
      </failingTarget>
      <sourceEncoding>ASCII</sourceEncoding>
    </hudson.plugins.cobertura.CoberturaPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.6">
      <testResults>**/test-reports/test-report.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <healthScaleFactor>1.0</healthScaleFactor>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.sloccount.SloccountPublisher plugin="sloccount@1.20">
      <pattern>**/test-reports/line-count.xml</pattern>
      <encoding></encoding>
      <commentIsCode>false</commentIsCode>
      <numBuildsInGraph>0</numBuildsInGraph>
      <ignoreBuildFailure>false</ignoreBuildFailure>
    </hudson.plugins.sloccount.SloccountPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.6"/>
  </buildWrappers>
</project>